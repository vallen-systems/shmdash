[build-system]
requires = ["setuptools>=61", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "shmdash"
version = "0.4.0"
description = "Vallen Systeme Dashboard (SHM Dash) upload client"
authors = [
    { name = "Lukas Berbuer (Vallen Systeme GmbH)", email = "lukas.berbuer@vallen.de" },
]
readme = "README.md"
license = { text = "MIT License" }
requires-python = ">=3.7"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
keywords = ["vallen", "shmdash", "dashboard", "upload", "client"]
dependencies = ["aiohttp~=3.7"]

[project.optional-dependencies]
tests = [
    "pytest>=6", # pyproject.toml support
    "coverage[toml]>=5", # pyproject.toml support

]
tools = [
    "mypy>=0.9", # pyproject.toml support
    "ruff>=0.5",
    "tox>=3.4", # pyproject.toml support

]
dev = ["shmdash[tests,tools]"] # recursive dependency since pip 21.2

[project.urls]
Source = "https://github.com/vallen-systems/pySHMdash"
Issues = "https://github.com/vallen-systems/pySHMdash/issues"

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    "F", # pyflakes
    "E", "W", # pycodestyle
    "I", # isort
    "N", # pep8 naming
    "B", # flake8 bugbear
    "A", # flake8 builtins
    "C4", # flake8 comprehensions
    "G", # flake8 logging format
    "PIE", # flake8 pie
    "RET", # flake8 return
    "SIM", # flake8 simplify
    "PT", # flake8 pytest style
    "PL", # pylint
    "PERF", # perflint
    "RUF", # ruff specific rules
]

[tool.mypy]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q" # test summary for (a)ll except passed
testpaths = ["tests"]
log_cli = true
log_cli_level = "WARNING"

[tool.coverage.run]
branch = true
source = ["shmdash"]

[tool.coverage.paths]
source = ["src", ".tox/*/site-packages"]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = ruff, mypy, py37, py38, p39, py310, py311, coverage-report

[testenv:ruff]
skip_install = true
deps = ruff
commands =
    ruff check .

[testenv:mypy]
skip_install = true
deps = mypy>=0.9
commands =
    mypy ./src/

[testenv]
extras = tests
commands = 
    coverage run --parallel -m pytest

[testenv:coverage-report]
skip_install = true
deps = coverage[toml]>=5
commands =
    - coverage combine
    coverage report
"""
