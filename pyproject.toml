[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "shmdash"
version = "0.6.0"
description = "Vallen Systeme Dashboard (SHM Dash) upload client"
authors = [
    { name = "Lukas Berbuer (Vallen Systeme GmbH)", email = "lukas.berbuer@vallen.de" },
]
readme = "README.md"
license = { text = "MIT License" }
requires-python = ">=3.7"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = ["vallen", "shmdash", "dashboard", "upload", "client"]
dependencies = ["httpx>=0.27"]

[project.optional-dependencies]
tests = [
    "coverage[toml]>=5", # pyproject.toml support
    "pytest>=6", # pyproject.toml support
    "pytest-asyncio",
]
tools = [
    "hatch",
    "mypy>=0.9", # pyproject.toml support
    "ruff>=0.5",
]
dev = ["shmdash[tests,tools]"] # recursive dependency since pip 21.2

[project.urls]
Source = "https://github.com/vallen-systems/pySHMdash"
Issues = "https://github.com/vallen-systems/pySHMdash/issues"

[tool.hatch.envs.hatch-test]
features = ["tests"]

[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.typing]
features = ["tools"]
[tool.hatch.envs.typing.scripts]
check = "mypy ."

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN", # flake8-annotations
    "COM812", # Trailing comma missing, conflicts with ruff format
    "D", # pydocstyle
    "ERA001", # Found commented-out code
    "EM102", # Exception must not use an f-string literal, assign to variable first
    "ISC001", # Implicitly concatenated string literals on one line, conflicts with ruff format
    "TRY003", # Avoid specifying long messages outside the exception class
]

[tool.ruff.lint.per-file-ignores]
"!src/**/*.py" = [
    "PLR2004", # Magic value used in comparison
    "S101", # Use of `assert` detected
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
    "T20", # flake8-print
    "INP001", # File is part of an implicit namespace package. Add an __init__.py.
]

[tool.mypy]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q" # test summary for (a)ll except passed
testpaths = ["tests"]
log_cli = true
log_cli_level = "ERROR"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "module"

[tool.coverage.run]
branch = true
source = ["shmdash"]

[tool.coverage.paths]
source = ["src", ".tox/*/site-packages"]
